{"ast":null,"code":"export const users = [{\n  id: 1,\n  firstName: \"Admin\",\n  lastName: \"User\",\n  email: \"admin@library.com\",\n  password: \"admin123\",\n  role: \"librarian\",\n  joinDate: new Date(2022, 0, 10),\n  avatar: \"https://via.placeholder.com/150?text=Admin\"\n}, {\n  id: 2,\n  firstName: \"John\",\n  lastName: \"Smith\",\n  email: \"john@example.com\",\n  password: \"john123\",\n  role: \"student\",\n  studentId: \"ST-2023-001\",\n  department: \"Computer Science\",\n  joinDate: new Date(2023, 8, 5),\n  avatar: \"https://via.placeholder.com/150?text=John\"\n}, {\n  id: 3,\n  firstName: \"Emma\",\n  lastName: \"Davis\",\n  email: \"emma@example.com\",\n  password: \"emma123\",\n  role: \"student\",\n  studentId: \"ST-2023-002\",\n  department: \"Literature\",\n  joinDate: new Date(2023, 7, 20),\n  avatar: \"https://via.placeholder.com/150?text=Emma\"\n}, {\n  id: 4,\n  firstName: \"Michael\",\n  lastName: \"Johnson\",\n  email: \"michael@example.com\",\n  password: \"michael123\",\n  role: \"student\",\n  studentId: \"ST-2022-015\",\n  department: \"Physics\",\n  joinDate: new Date(2022, 9, 12),\n  avatar: \"https://via.placeholder.com/150?text=Michael\"\n}, {\n  id: 5,\n  firstName: \"Sarah\",\n  lastName: \"Wilson\",\n  email: \"sarah@library.com\",\n  password: \"sarah123\",\n  role: \"librarian\",\n  joinDate: new Date(2023, 2, 15),\n  avatar: \"https://via.placeholder.com/150?text=Sarah\"\n}];\n\n// Helper function to get all students\nexport const getStudents = () => {\n  return users.filter(user => user.role === 'student');\n};\n\n// Helper function to get all librarians\nexport const getLibrarians = () => {\n  return users.filter(user => user.role === 'librarian');\n};\n\n// Helper function to get user by ID\nexport const getUserById = userId => {\n  return users.find(user => user.id === parseInt(userId));\n};","map":{"version":3,"names":["users","id","firstName","lastName","email","password","role","joinDate","Date","avatar","studentId","department","getStudents","filter","user","getLibrarians","getUserById","userId","find","parseInt"],"sources":["C:/BookBuddy/frontend/src/components/data/users.js"],"sourcesContent":["export const users = [\r\n    {\r\n      id: 1,\r\n      firstName: \"Admin\",\r\n      lastName: \"User\",\r\n      email: \"admin@library.com\",\r\n      password: \"admin123\",\r\n      role: \"librarian\",\r\n      joinDate: new Date(2022, 0, 10),\r\n      avatar: \"https://via.placeholder.com/150?text=Admin\"\r\n    },\r\n    {\r\n      id: 2,\r\n      firstName: \"John\",\r\n      lastName: \"Smith\",\r\n      email: \"john@example.com\",\r\n      password: \"john123\",\r\n      role: \"student\",\r\n      studentId: \"ST-2023-001\",\r\n      department: \"Computer Science\",\r\n      joinDate: new Date(2023, 8, 5),\r\n      avatar: \"https://via.placeholder.com/150?text=John\"\r\n    },\r\n    {\r\n      id: 3,\r\n      firstName: \"Emma\",\r\n      lastName: \"Davis\",\r\n      email: \"emma@example.com\",\r\n      password: \"emma123\",\r\n      role: \"student\",\r\n      studentId: \"ST-2023-002\",\r\n      department: \"Literature\",\r\n      joinDate: new Date(2023, 7, 20),\r\n      avatar: \"https://via.placeholder.com/150?text=Emma\"\r\n    },\r\n    {\r\n      id: 4,\r\n      firstName: \"Michael\",\r\n      lastName: \"Johnson\",\r\n      email: \"michael@example.com\",\r\n      password: \"michael123\",\r\n      role: \"student\",\r\n      studentId: \"ST-2022-015\",\r\n      department: \"Physics\",\r\n      joinDate: new Date(2022, 9, 12),\r\n      avatar: \"https://via.placeholder.com/150?text=Michael\"\r\n    },\r\n    {\r\n      id: 5,\r\n      firstName: \"Sarah\",\r\n      lastName: \"Wilson\",\r\n      email: \"sarah@library.com\",\r\n      password: \"sarah123\",\r\n      role: \"librarian\",\r\n      joinDate: new Date(2023, 2, 15),\r\n      avatar: \"https://via.placeholder.com/150?text=Sarah\"\r\n    }\r\n  ];\r\n  \r\n  // Helper function to get all students\r\n  export const getStudents = () => {\r\n    return users.filter(user => user.role === 'student');\r\n  };\r\n  \r\n  // Helper function to get all librarians\r\n  export const getLibrarians = () => {\r\n    return users.filter(user => user.role === 'librarian');\r\n  };\r\n  \r\n  // Helper function to get user by ID\r\n  export const getUserById = (userId) => {\r\n    return users.find(user => user.id === parseInt(userId));\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,CACjB;EACEC,EAAE,EAAE,CAAC;EACLC,SAAS,EAAE,OAAO;EAClBC,QAAQ,EAAE,MAAM;EAChBC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;EAC/BC,MAAM,EAAE;AACV,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,SAAS,EAAE,MAAM;EACjBC,QAAQ,EAAE,OAAO;EACjBC,KAAK,EAAE,kBAAkB;EACzBC,QAAQ,EAAE,SAAS;EACnBC,IAAI,EAAE,SAAS;EACfI,SAAS,EAAE,aAAa;EACxBC,UAAU,EAAE,kBAAkB;EAC9BJ,QAAQ,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9BC,MAAM,EAAE;AACV,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,SAAS,EAAE,MAAM;EACjBC,QAAQ,EAAE,OAAO;EACjBC,KAAK,EAAE,kBAAkB;EACzBC,QAAQ,EAAE,SAAS;EACnBC,IAAI,EAAE,SAAS;EACfI,SAAS,EAAE,aAAa;EACxBC,UAAU,EAAE,YAAY;EACxBJ,QAAQ,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;EAC/BC,MAAM,EAAE;AACV,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,SAAS,EAAE,SAAS;EACpBC,QAAQ,EAAE,SAAS;EACnBC,KAAK,EAAE,qBAAqB;EAC5BC,QAAQ,EAAE,YAAY;EACtBC,IAAI,EAAE,SAAS;EACfI,SAAS,EAAE,aAAa;EACxBC,UAAU,EAAE,SAAS;EACrBJ,QAAQ,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;EAC/BC,MAAM,EAAE;AACV,CAAC,EACD;EACER,EAAE,EAAE,CAAC;EACLC,SAAS,EAAE,OAAO;EAClBC,QAAQ,EAAE,QAAQ;EAClBC,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;EAC/BC,MAAM,EAAE;AACV,CAAC,CACF;;AAED;AACA,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAOZ,KAAK,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACR,IAAI,KAAK,SAAS,CAAC;AACtD,CAAC;;AAED;AACA,OAAO,MAAMS,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAOf,KAAK,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACR,IAAI,KAAK,WAAW,CAAC;AACxD,CAAC;;AAED;AACA,OAAO,MAAMU,WAAW,GAAIC,MAAM,IAAK;EACrC,OAAOjB,KAAK,CAACkB,IAAI,CAACJ,IAAI,IAAIA,IAAI,CAACb,EAAE,KAAKkB,QAAQ,CAACF,MAAM,CAAC,CAAC;AACzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}