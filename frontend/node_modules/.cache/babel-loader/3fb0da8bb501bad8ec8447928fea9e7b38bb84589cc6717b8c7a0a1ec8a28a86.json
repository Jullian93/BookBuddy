{"ast":null,"code":"// Format date to readable string\nexport const formatDate = date => {\n  if (!date) return 'N/A';\n  const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  };\n  return new Date(date).toLocaleDateString('en-US', options);\n};\n\n// Check if date is in the past\nexport const isOverdue = date => {\n  if (!date) return false;\n  const today = new Date();\n  return new Date(date) < today;\n};\n\n// Calculate days remaining or overdue\nexport const calculateDaysRemaining = dueDate => {\n  if (!dueDate) return 0;\n  const today = new Date();\n  const due = new Date(dueDate);\n  const diffTime = due - today;\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  return diffDays;\n};\n\n// Format book status with color\nexport const getStatusDisplay = status => {\n  switch (status) {\n    case 'borrowed':\n      return {\n        text: 'Borrowed',\n        color: 'bg-blue-100 text-blue-800'\n      };\n    case 'overdue':\n      return {\n        text: 'Overdue',\n        color: 'bg-red-100 text-red-800'\n      };\n    case 'reserved':\n      return {\n        text: 'Reserved',\n        color: 'bg-yellow-100 text-yellow-800'\n      };\n    case 'returned':\n      return {\n        text: 'Returned',\n        color: 'bg-green-100 text-green-800'\n      };\n    default:\n      return {\n        text: status,\n        color: 'bg-gray-100 text-gray-800'\n      };\n  }\n};\n\n// Filter books by search term (title, author, genre)\nexport const filterBooks = (books, searchTerm) => {\n  if (!searchTerm) return books;\n  const term = searchTerm.toLowerCase();\n  return books.filter(book => book.title.toLowerCase().includes(term) || book.author.toLowerCase().includes(term) || book.genre.toLowerCase().includes(term) || book.isbn.includes(term));\n};\n\n// Sort books by field\nexport const sortBooks = (books, field, direction = 'asc') => {\n  const sortedBooks = [...books];\n  sortedBooks.sort((a, b) => {\n    let valueA = a[field];\n    let valueB = b[field];\n\n    // Handle string comparison\n    if (typeof valueA === 'string') {\n      valueA = valueA.toLowerCase();\n      valueB = valueB.toLowerCase();\n    }\n\n    // Compare the values\n    if (valueA < valueB) return direction === 'asc' ? -1 : 1;\n    if (valueA > valueB) return direction === 'asc' ? 1 : -1;\n    return 0;\n  });\n  return sortedBooks;\n};\n\n// Format currency\nexport const formatCurrency = amount => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(amount);\n};","map":{"version":3,"names":["formatDate","date","options","year","month","day","Date","toLocaleDateString","isOverdue","today","calculateDaysRemaining","dueDate","due","diffTime","diffDays","Math","ceil","getStatusDisplay","status","text","color","filterBooks","books","searchTerm","term","toLowerCase","filter","book","title","includes","author","genre","isbn","sortBooks","field","direction","sortedBooks","sort","a","b","valueA","valueB","formatCurrency","amount","Intl","NumberFormat","style","currency","format"],"sources":["C:/BookBuddy/frontend/src/utils/helpers.js"],"sourcesContent":["// Format date to readable string\r\nexport const formatDate = (date) => {\r\n    if (!date) return 'N/A';\r\n    \r\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n    return new Date(date).toLocaleDateString('en-US', options);\r\n  };\r\n  \r\n  // Check if date is in the past\r\n  export const isOverdue = (date) => {\r\n    if (!date) return false;\r\n    const today = new Date();\r\n    return new Date(date) < today;\r\n  };\r\n  \r\n  // Calculate days remaining or overdue\r\n  export const calculateDaysRemaining = (dueDate) => {\r\n    if (!dueDate) return 0;\r\n    \r\n    const today = new Date();\r\n    const due = new Date(dueDate);\r\n    const diffTime = due - today;\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return diffDays;\r\n  };\r\n  \r\n  // Format book status with color\r\n  export const getStatusDisplay = (status) => {\r\n    switch (status) {\r\n      case 'borrowed':\r\n        return { text: 'Borrowed', color: 'bg-blue-100 text-blue-800' };\r\n      case 'overdue':\r\n        return { text: 'Overdue', color: 'bg-red-100 text-red-800' };\r\n      case 'reserved':\r\n        return { text: 'Reserved', color: 'bg-yellow-100 text-yellow-800' };\r\n      case 'returned':\r\n        return { text: 'Returned', color: 'bg-green-100 text-green-800' };\r\n      default:\r\n        return { text: status, color: 'bg-gray-100 text-gray-800' };\r\n    }\r\n  };\r\n  \r\n  // Filter books by search term (title, author, genre)\r\n  export const filterBooks = (books, searchTerm) => {\r\n    if (!searchTerm) return books;\r\n    \r\n    const term = searchTerm.toLowerCase();\r\n    return books.filter(book => \r\n      book.title.toLowerCase().includes(term) ||\r\n      book.author.toLowerCase().includes(term) ||\r\n      book.genre.toLowerCase().includes(term) ||\r\n      book.isbn.includes(term)\r\n    );\r\n  };\r\n  \r\n  // Sort books by field\r\n  export const sortBooks = (books, field, direction = 'asc') => {\r\n    const sortedBooks = [...books];\r\n    \r\n    sortedBooks.sort((a, b) => {\r\n      let valueA = a[field];\r\n      let valueB = b[field];\r\n      \r\n      // Handle string comparison\r\n      if (typeof valueA === 'string') {\r\n        valueA = valueA.toLowerCase();\r\n        valueB = valueB.toLowerCase();\r\n      }\r\n      \r\n      // Compare the values\r\n      if (valueA < valueB) return direction === 'asc' ? -1 : 1;\r\n      if (valueA > valueB) return direction === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n    \r\n    return sortedBooks;\r\n  };\r\n  \r\n  // Format currency\r\n  export const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    }).format(amount);\r\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}